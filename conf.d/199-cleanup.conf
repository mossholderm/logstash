filter {
  if [type] == "syslog" or [type] == "cee" {
    if [message] =~ /^\\{6,}/ {
      drop { }
    }
    if ![message] {
      mutate {
        add_field => { "message" => "%{original}" }
      }
    }
    mutate {
      convert => { "level" => "integer" }
    }
    if [@metadata][timestamp] {
      if [@metadata][timestamp] =~ /\d{6}$/ {
        mutate {
          gsub => [ "[@metadata][timestamp]", "\d{3}$", "" ]
        }
      }
      date {
        tag_on_failure => [ "_dateparsefailure_cleanup1" ]
        match => [ "[syslog][@metadata]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss.SSS", "MMM dd HH:mm:ss.SSS", "MMM dd HH:mm:ss.S", "MMM  d HH:mm:ss.S", "ISO8601" ]
      }
    }
    if [systemd][timestamp][realtime] {
      ruby {
        code => "event.set('[@metadata][realtime]', event.get('[systemd][timestamp][realtime]')/1000)"
      }
      date {
        tag_on_failure => [ "_dateparsefailure_cleanup2" ]
        locale => "en"
        match => [ "[@metadata][realtime]", "UNIX_MS" ]
        timezone => "UTC"
      }
    }
  }
}
