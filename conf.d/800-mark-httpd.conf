filter {
  if [type] == "apache_access" {
    if [http][response][code] == 409 and [message] =~ /^\/kibana\/elasticsearch\/\.kibana\/.*\?op_type=create$/ {
      mutate {
        add_tag => [ "Known Message", "Benign" ]
      }
    } 
    if [http][response][code] >= 500 {
      mutate {
        add_tag => [ "Error" ]
      }
      grok {
        add_tag        => [ "Known Message" ]
        tag_on_failure => [ ]
        match          => { "message" => [
          "^/guacamole",
          "^/kibana",
          "^/zabbix"
        ] }
      }
    }
  }
  if [type] == "apache_error" or [systemd][unit] == "httpd24-httpd.service" or ( [type] == "apache_access" and [message] =~ /^(\[|AH\d+:)/ ) {
    grok {
      add_tag        => [ "Known Message","Benign" ]
      tag_on_failure => [ ]
      match          => { "message" => [
        "^AH00170: caught SIGWINCH, shutting down gracefully$",
        "^AH01232: suEXEC mechanism enabled \(wrapper: /usr/sbin/suexec\)$",
        "^AH01757: generating secret for digest authentication \.\.\.$",
        "^(\[core:notice\] \[pid %{POSINT}\] )?AH00094: Command line: \'%{DATA}\'$",
        "^(\[mpm_prefork:notice\] \[pid %{POSINT}\] )?AH00163: Apache/[0-9.]+ \(%{DATA}\) %{DATA} configured -- resuming normal operations$",
        "^(\[mpm_prefork:notice\] \[pid %{POSINT}\] )?AH00169: caught SIGTERM, shutting down$",
        "^SELinux policy enabled; httpd running as context system_u:system_r:httpd_t:s0$"
      ] }
    }
    grok {
      add_tag        => [ "Known Message","Error" ]
      tag_on_failure => [ ]
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      match          => { "message" => [
        "^AH00161: server reached MaxRequestWorkers setting, consider raising the MaxRequestWorkers setting$",
        "^AH00526: Syntax error on line %{INT} of %{FILENAME_SRC}:$",
        "^AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using %{IP_DST}. Set the \'ServerName\' directive globally to suppress this message$",
        "^AH02282: No slotmem from mod_heartmonitor$",
        "^(\[core:notice\] \[pid %{POSINT}\] )?AH00052: child pid %{POSINT} exit signal Segmentation fault \(11\)$",
        "^(\[mpm_prefork:error\] \[pid %{POSINT}\] )?AH00161: server reached MaxRequestWorkers setting, consider raising the MaxRequestWorkers setting$",
        "^NSSSessionCacheTimeout is deprecated\. Ignoring\.$",
        "^SSLCertificateFile: file '%{FILENAME_SRC}' does not exist or is empty$"
      ] }
    }
  }
  if ( [type] == "syslog" or [type] == "cee" ) and ( [syslog][identifier] == "httpd" or [systemd][unit] == "httpd.service" ) {
    grok {
      add_tag        => [ "Known Message","Benign" ]
      tag_on_failure => [ ]
      patterns_dir => [ "/etc/logstash/patterns.d/" ]
      match          => { "message" => [
        "^GSSAPI client step \d+$"
      ] }
    }
    
  }
}
