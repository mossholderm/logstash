filter {
  if [file] == "/var/log/snort/alert" or [type] == "snort" or [syslog][identifier] == "snort" {
    mutate { 
      replace   => { "type"        => "snort" } 
      add_field => { "application" => "Snort" }
    }
    grok {
      patterns_dir   => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ "_snortParseFailure" ]
      add_tag        => [ "Known Message", "Alert" ]
      overwrite      => [ "message" ]
      match          => { "original" => [ "^(%{SNORTTIMESTAMP}  %{DATA:message}|%{EXTENDED_SYSLOG})$" ] }
    }
    grok {
      patterns_dir   => [ "/etc/logstash/patterns.d/" ]
      tag_on_failure => [ "_snortParseFailure" ]
      add_tag        => [ "Known Message", "Alert" ]
      overwrite      => [ "message" ]
      match          => { "message" => [ "^%{SNORTMSG:message]}$" ] }
    }
    if "_snortParseFailure" not in [tags] {
      date {
        tag_on_failure => [ "_datefarsefailure_snort" ]
        match => [ "[@metadata][snort_timestamp]" , "MM/dd-HH:mm:ss", "MM/dd-HH:mm:ss.SSSSSS" ]
      }
    } else {
      grok {
        remove_tag     => [ "_snortParseFailure" ]
        tag_on_failure => [  ]
        match          => { "message" => [ "^*** Caught Term-Signal$" ] }
      }
    }
  }
}
